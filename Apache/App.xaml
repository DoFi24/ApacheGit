<Application x:Class="Apache.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Apache"
             xmlns:mt="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
             StartupUri="Views/AuthorizationWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <!--Главное старница продажи-->

            <SolidColorBrush x:Key="ComboBox.Static.Background" Color="#E4E4E4"/>
            <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#1678F3"/>
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Background" Color="#FFECF4FC"/>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
            <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
                <GradientStop Color="#FFDCECFC" Offset="1.0"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
            <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFDAECFC" Offset="0.0"/>
                <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
            <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
            <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
                <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
            <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">

                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="ClickMode" Value="Press"/>
                <Setter Property="Height" Value="45px"/>
                <Setter Property="Width" Value="349px"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}"
                            BorderThickness="0" SnapsToDevicePixels="true" CornerRadius="7">
                                <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1"
                                HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" 
                                Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                    <mt:PackIcon x:Name="arrow" Kind="ChevronDown"
                                  Foreground="{StaticResource ComboBox.Static.Glyph}" 
                                  HorizontalAlignment="Right" Width="30" Height="30" 
                                  VerticalAlignment="Center"/>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                    <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Foreground" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                    <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Foreground" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                    <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                    <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="MainPageComboBox" TargetType="{x:Type ComboBox}">
                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                    </Grid.ColumnDefinitions>
 
                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" 
                                              MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
                            Height="125px" CornerRadius="10"
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="2">

                                <ScrollViewer x:Name="DropDownScrollViewer" Margin="2">
                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" 
                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </theme:SystemDropShadowChrome>
                    </Popup>
                    <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                          Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                          Style="{StaticResource ComboBoxToggleButton}"/>
                    <ContentPresenter Margin="20 13 0 0" x:Name="contentPresenter" 
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              IsHitTestVisible="false"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                        <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                        <Setter Property="Color" TargetName="shadow" Value="Transparent"/>
                    </Trigger>
                    <Trigger Property="HasItems" Value="false">
                        <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="true"/>
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                    </MultiTrigger>
                    <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                        <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                        <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>


            <Style TargetType="TextBox" x:Key="LoginPasswordTextBox">
                <Setter Property="Background" Value="#E4E4E4" />
                <Setter Property="Width" Value="372" />
                <Setter Property="Height" Value="45px" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="15 0 0 0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border Background="{TemplateBinding Background}" 
                            x:Name="Bd" BorderBrush="Black"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="7">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="Width" Value="Auto">
                                    <Setter Property="MinWidth" Value="100"/>
                                </Trigger>
                                <Trigger Property="Height" Value="Auto">
                                    <Setter Property="MinHeight" Value="20"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style TargetType="TextBox">
                    <Setter Property="Background" Value="White" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="FontSize" Value="45px" />
                    <Setter Property="TextAlignment" Value="Center"/>
                    <Setter Property="IsReadOnly" Value="True" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border Background="{TemplateBinding Background}" 
                            x:Name="Bd" BorderBrush="Black"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="7">
                                    <ScrollViewer VerticalContentAlignment="Center" x:Name="PART_ContentHost"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="12" />
                    <Setter Property="Background" Value="ForestGreen" />
                    <Setter Property="Foreground" Value="#FFFFFF" />
                    <Setter Property="FontSize" Value="40px" />
                    <Setter Property="FontWeight" Value="DemiBold" />
                    <Setter Property="Command" Value="{Binding PutNumberCommand}"/>
                    <Setter Property="CommandParameter" Value="{Binding Content,RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border BorderThickness="0"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Button.Background}" 
                            CornerRadius="13">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="1" ShadowDepth="5" Opacity=".7"/>
                                    </Border.Effect>
                                    <Label HorizontalAlignment="Center" VerticalContentAlignment="Center"
                                           Padding="{TemplateBinding Button.Padding}"
                                           Foreground="{TemplateBinding Button.Foreground}"
                                           VerticalAlignment="Center" Content="{TemplateBinding Button.Content}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            <Style TargetType="Button" x:Key="MessageDialogButton">
                <Setter Property="Width" Value="140px" />
                <Setter Property="Height" Value="37px" />
                <Setter Property="Background" Value="#1678F3" />
                <Setter Property="Foreground" Value="#FFFFFF" />
                <Setter Property="FontSize" Value="18px"/>
                <Setter Property="FontFamily" Value="Rounded Mplus 1c" />
                <Setter Property="Margin" Value="100 0 0 0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border BorderThickness="0"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Button.Background}" 
                            CornerRadius="14.5">
                                <TextBlock TextAlignment="Center" Margin="{TemplateBinding Button.Padding}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center" Text="{TemplateBinding Button.Content}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.9"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Opacity" Value="0.7"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="Button" BasedOn="{StaticResource MessageDialogButton}" x:Key="ExitDialogButton">
                <Setter Property="Width" Value="36" />
                <Setter Property="Height" Value="36" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="White" />
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Margin" Value="0 3 15 0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Button.Background}" 
                            CornerRadius="25">
                                <mt:PackIcon Kind="Lock" Foreground="DarkGreen" Height="30" 
                                             Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <!--Главное окно сообщения-->
            <Style TargetType="Button" x:Key="MainWindowMenuButton">
                <Setter Property="Width" Value="65px" />
                <Setter Property="Height" Value="65px" />
                <Setter Property="Background" Value="White" />
                <Setter Property="Foreground" Value="#1678F3" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0 5 0 0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            Background="{TemplateBinding Background}"
                            CornerRadius="14">
                                <Label  HorizontalAlignment="Center" VerticalAlignment="Center" 
                                        Foreground="{TemplateBinding Button.Foreground}" 
                                        Content="{TemplateBinding Button.Content}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Opacity" Value="0.7" />
                    </Trigger>
                    <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.9"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>-->
                </Style.Triggers>
            </Style>

            <Style TargetType="RadioButton" x:Key="MainWindowMenuRadioButton">
                <Setter Property="Width" Value="65px" />
                <Setter Property="Height" Value="65px" />
                <Setter Property="GroupName" Value="MenuButtons" />
                <Setter Property="Background" Value="White" />
                <Setter Property="Foreground" Value="DarkGreen" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0 5 0 0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            Background="{TemplateBinding Background}"
                            CornerRadius="14">
                                <Label HorizontalAlignment="Center" VerticalAlignment="Center" 
                               Foreground="{TemplateBinding Button.Foreground}" 
                               Content="{TemplateBinding Button.Content}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="DarkGreen" />
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                    <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.9"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>-->
                </Style.Triggers>
            </Style>

            <Style TargetType="Button" x:Key="ToolBarMainWindowButton">
                <Setter Property="Width" Value="35px" />
                <Setter Property="Height" Value="35px" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0 0 15 0"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.9"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Opacity" Value="0.7"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--Главная страница продажи-->
            <Style TargetType="Button" x:Key="MainSalePageButton">
                <Setter Property="Width" Value="350px" />
                <Setter Property="Height" Value="55px" />
                <Setter Property="Background" Value="#1678F3" />
                <Setter Property="Foreground" Value="#FFFFFF" />
                <Setter Property="FontSize" Value="23px" />
                <Setter Property="FontFamily" Value="Rounded Mplus 1c" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border BorderThickness="0"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Button.Background}" 
                            CornerRadius="13">
                                <Label HorizontalAlignment="Center" Foreground="{TemplateBinding Foreground}"
                               VerticalAlignment="Center" Content="{TemplateBinding Button.Content}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.9"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Opacity" Value="0.7"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="Button" x:Key="NextBeforeNavigationButton">
                <Setter Property="Width" Value="35px" />
                <Setter Property="Height" Value="35px" />
                <Setter Property="Background" Value="#1678F3" />
                <Setter Property="Foreground" Value="#FFFFFF" />
                <Setter Property="FontSize" Value="23px" />
                <Setter Property="FontFamily" Value="Rounded Mplus 1c" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Button.Background}" 
                            CornerRadius="13">
                                <Label HorizontalAlignment="Center" Foreground="{TemplateBinding Foreground}"
                               VerticalAlignment="Center" Content="{TemplateBinding Button.Content}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.9"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Opacity" Value="0.7"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="DataGrid" x:Key="MainSalePageDataGrid">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="CanUserDeleteRows" Value="False" />
                <Setter Property="CanUserAddRows" Value="False" />
                <Setter Property="CanUserSortColumns" Value="False" />
                <Setter Property="CanUserDeleteRows" Value="False" />
                <Setter Property="RowHeight" Value="45" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="CanUserResizeRows" Value="False" />
                <Setter Property="AutoGenerateColumns" Value="False" />
                <Setter Property="CanUserReorderColumns" Value="False" />
                <Setter Property="SelectionMode" Value="Single" />
                <Setter Property="CanUserResizeRows" Value="False" />
                <Setter Property="HorizontalGridLinesBrush" Value="White" />
                <Setter Property="VerticalGridLinesBrush" Value="White" />
                <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
                <Setter Property="AlternatingRowBackground" Value="White" />
                <Setter Property="RowBackground" Value="#F3F3F3" />
                <Setter Property="EnableRowVirtualization" Value="True" />
                <Setter Property="RowDetailsVisibilityMode" Value="Collapsed" />
                <Setter Property="ColumnHeaderStyle" Value="{DynamicResource MainSalePageDataGridColumnHeader}"/>
                <Setter Property="RowStyle" Value="{DynamicResource MainSalePageDataGridRow}"/>
                <Setter Property="CellStyle" Value="{DynamicResource MainSalePageDataGridCell}"/>
            </Style>

            <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="MainSalePageDataGridColumnHeader" >
                <Setter Property="FontSize" Value="17px"/>
                <Setter Property="Height" Value="37px"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontFamily" Value="Rounded Mplus 1c" />
            </Style>

            <Style TargetType="{x:Type DataGridRow}" x:Key="MainSalePageDataGridRow">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Padding" Value="20 0 0 0"/>
                <Setter Property="BorderThickness" Value="0" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#AED6F1 " />
                        <Setter Property="BorderBrush" Value="#AED6F1  " />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MainSalePageDataGridCell" TargetType="{x:Type DataGridCell}">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#AED6F1 " />
                        <Setter Property="BorderBrush" Value="#AED6F1  " />
                        <Setter Property="FontWeight" Value="DemiBold" />
                        <Setter Property="Foreground" Value="Black" />
                    </Trigger>
                </Style.Triggers>


            </Style>


            <!--Касса старница-->

            <Style TargetType="DataGrid" x:Key="KassaPageDataGrid">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="CanUserDeleteRows" Value="False" />
                <Setter Property="CanUserAddRows" Value="False" />
                <Setter Property="CanUserSortColumns" Value="False" />
                <Setter Property="CanUserDeleteRows" Value="False" />
                <Setter Property="RowHeight" Value="45" />
                <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="CanUserResizeRows" Value="False" />
                <Setter Property="AutoGenerateColumns" Value="False" />
                <Setter Property="CanUserReorderColumns" Value="False" />
                <Setter Property="SelectionMode" Value="Extended" />
                <Setter Property="CanUserResizeRows" Value="False" />
                <Setter Property="HorizontalGridLinesBrush" Value="White" />
                <Setter Property="VerticalGridLinesBrush" Value="White" />
                <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
                <Setter Property="RowBackground" Value="White" />
                <Setter Property="EnableRowVirtualization" Value="True" />
                <Setter Property="RowDetailsVisibilityMode" Value="Collapsed" />
                <Setter Property="ColumnHeaderStyle" Value="{DynamicResource KassaPageDataGridColumnHeader}"/>
                <Setter Property="RowStyle" Value="{DynamicResource KassaPageDataGridRow}"/>
                <Setter Property="CellStyle" Value="{DynamicResource KassaPageDataGridCell}"/>
            </Style>

            <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="KassaPageDataGridColumnHeader" >
                <Setter Property="FontSize" Value="17px"/>
                <Setter Property="Height" Value="37px"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontWeight" Value="DemiBold" />
                <Setter Property="FontFamily" Value="Rounded Mplus 1c" />
            </Style>

            <Style TargetType="{x:Type DataGridRow}" x:Key="KassaPageDataGridRow">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Padding" Value="20 0 0 0"/>
                <Setter Property="BorderThickness" Value="0 0 0.5 0" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#AED6F1 " />
                        <Setter Property="BorderBrush" Value="#AED6F1  " />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="KassaPageDataGridCell" TargetType="{x:Type DataGridCell}">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="10 0 0 0"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#AED6F1 " />
                        <Setter Property="BorderBrush" Value="#AED6F1  " />
                        <Setter Property="FontWeight" Value="DemiBold" />
                        <Setter Property="Foreground" Value="Black" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <!--Окно авторизации-->
            <Style TargetType="TextBlock" x:Key="LoginPasswordTextBlock">
                <Setter Property="FontFamily" Value="Rounded Mplus 1c" />
                <Setter Property="Foreground" Value="#000000" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Width" Value="147" />
                <Setter Property="Height" Value="25" />
                <Setter Property="Margin" Value="45 0 0 0" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="FontWeight" Value="SemiBold" />
            </Style>

            <!--Окно авторизации-->
            <Style TargetType="TextBlock" x:Key="SaleTextBlock">
                <Setter Property="FontFamily" Value="Rounded Mplus 1c" />
                <Setter Property="Foreground" Value="ForestGreen" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontSize" Value="24" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="5 0 1 0" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="FontWeight" Value="SemiBold" />
            </Style>

            <!--Окно вывода сообщения-->
            <Style TargetType="TextBlock" x:Key="MessageDialogTextBlock">
                <Setter Property="FontFamily" Value="Rounded Mplus 1c" />
                <Setter Property="Foreground" Value="#000000" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontSize" Value="17px" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Width" Value="299px" />
                <Setter Property="Height" Value="48px" />
                <Setter Property="Margin" Value="0 10 0 0" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="FontWeight" Value="Regular" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>

            <!--Главная страница продажи-->

            <Style TargetType="TextBlock" x:Key="MainSalePageTextBlock">
                <Setter Property="FontFamily" Value="Rounded Mplus 1c" />
                <Setter Property="Foreground" Value="#000000" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontSize" Value="15px" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="FontWeight" Value="DemiBold" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>

            <!--Страница кассы-->

            <Style TargetType="TextBlock" x:Key="KassaPageTextBlock">
                <Setter Property="FontFamily" Value="Rounded Mplus 1c" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontSize" Value="25px" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="FontWeight" Value="DemiBold" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="Padding" Value="19 0 0 0" />
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
